// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using persistencia;

namespace persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220903234203_Second")]
    partial class Second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("dominio.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("color");
                });

            modelBuilder.Entity("dominio.Estilo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("marca_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("marca_Id");

                    b.ToTable("estilo");
                });

            modelBuilder.Entity("dominio.GrupoRepuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Grupo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("grupoRepuesto");
                });

            modelBuilder.Entity("dominio.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("marca");
                });

            modelBuilder.Entity("dominio.Operacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("Horas")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("operacion");
                });

            modelBuilder.Entity("dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clasificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("dominio.Repuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Costo")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("grupo_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("grupo_Id");

                    b.ToTable("repuesto");
                });

            modelBuilder.Entity("dominio.RevOperaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("operacion_Id")
                        .HasColumnType("int");

                    b.Property<int?>("revision_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("operacion_Id");

                    b.HasIndex("revision_Id");

                    b.ToTable("revOperaciones");
                });

            modelBuilder.Entity("dominio.RevRepuestos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("repuesto_Id")
                        .HasColumnType("int");

                    b.Property<int?>("revision_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("repuesto_Id");

                    b.HasIndex("revision_Id");

                    b.ToTable("revRespuestos");
                });

            modelBuilder.Entity("dominio.Revision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado_vehiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kilometraje")
                        .HasColumnType("int");

                    b.Property<string>("Sintomas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("tecnico_Id")
                        .HasColumnType("int");

                    b.Property<int?>("vehiculo_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("tecnico_Id");

                    b.HasIndex("vehiculo_Id");

                    b.ToTable("revision");
                });

            modelBuilder.Entity("dominio.Tecnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("persona_Id")
                        .HasColumnType("int");

                    b.Property<int?>("tipo_vehiculo_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("persona_Id");

                    b.HasIndex("tipo_vehiculo_Id");

                    b.ToTable("tecnico");
                });

            modelBuilder.Entity("dominio.TipoVehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descricion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tipoVehiculo");
                });

            modelBuilder.Entity("dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("persona_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("persona_Id");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("dominio.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Servicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("color_Id")
                        .HasColumnType("int");

                    b.Property<int?>("estilo_Id")
                        .HasColumnType("int");

                    b.Property<int?>("persona_Id")
                        .HasColumnType("int");

                    b.Property<int?>("tipo_vehiculo_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("color_Id");

                    b.HasIndex("estilo_Id");

                    b.HasIndex("persona_Id");

                    b.HasIndex("tipo_vehiculo_Id");

                    b.ToTable("vehiculo");
                });

            modelBuilder.Entity("dominio.Estilo", b =>
                {
                    b.HasOne("dominio.Marca", "marca_")
                        .WithMany()
                        .HasForeignKey("marca_Id");

                    b.Navigation("marca_");
                });

            modelBuilder.Entity("dominio.Repuesto", b =>
                {
                    b.HasOne("dominio.GrupoRepuesto", "grupo_")
                        .WithMany()
                        .HasForeignKey("grupo_Id");

                    b.Navigation("grupo_");
                });

            modelBuilder.Entity("dominio.RevOperaciones", b =>
                {
                    b.HasOne("dominio.Operacion", "operacion_")
                        .WithMany()
                        .HasForeignKey("operacion_Id");

                    b.HasOne("dominio.Revision", "revision_")
                        .WithMany()
                        .HasForeignKey("revision_Id");

                    b.Navigation("operacion_");

                    b.Navigation("revision_");
                });

            modelBuilder.Entity("dominio.RevRepuestos", b =>
                {
                    b.HasOne("dominio.Repuesto", "repuesto_")
                        .WithMany()
                        .HasForeignKey("repuesto_Id");

                    b.HasOne("dominio.Revision", "revision_")
                        .WithMany()
                        .HasForeignKey("revision_Id");

                    b.Navigation("repuesto_");

                    b.Navigation("revision_");
                });

            modelBuilder.Entity("dominio.Revision", b =>
                {
                    b.HasOne("dominio.Tecnico", "tecnico_")
                        .WithMany()
                        .HasForeignKey("tecnico_Id");

                    b.HasOne("dominio.Vehiculo", "vehiculo_")
                        .WithMany()
                        .HasForeignKey("vehiculo_Id");

                    b.Navigation("tecnico_");

                    b.Navigation("vehiculo_");
                });

            modelBuilder.Entity("dominio.Tecnico", b =>
                {
                    b.HasOne("dominio.Persona", "persona_")
                        .WithMany()
                        .HasForeignKey("persona_Id");

                    b.HasOne("dominio.TipoVehiculo", "tipo_vehiculo_")
                        .WithMany()
                        .HasForeignKey("tipo_vehiculo_Id");

                    b.Navigation("persona_");

                    b.Navigation("tipo_vehiculo_");
                });

            modelBuilder.Entity("dominio.Usuario", b =>
                {
                    b.HasOne("dominio.Persona", "persona_")
                        .WithMany()
                        .HasForeignKey("persona_Id");

                    b.Navigation("persona_");
                });

            modelBuilder.Entity("dominio.Vehiculo", b =>
                {
                    b.HasOne("dominio.Color", "color_")
                        .WithMany()
                        .HasForeignKey("color_Id");

                    b.HasOne("dominio.Estilo", "estilo_")
                        .WithMany()
                        .HasForeignKey("estilo_Id");

                    b.HasOne("dominio.Persona", "persona_")
                        .WithMany()
                        .HasForeignKey("persona_Id");

                    b.HasOne("dominio.TipoVehiculo", "tipo_vehiculo_")
                        .WithMany()
                        .HasForeignKey("tipo_vehiculo_Id");

                    b.Navigation("color_");

                    b.Navigation("estilo_");

                    b.Navigation("persona_");

                    b.Navigation("tipo_vehiculo_");
                });
#pragma warning restore 612, 618
        }
    }
}
